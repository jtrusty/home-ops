---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  chartRef:
    kind: OCIRepository
    name: grafana
  interval: 1h
  values:
    replicas: 2
    deploymentStrategy:
      type: RollingUpdate

    admin:
      existingSecret: grafana-admin-secret

    annotations:
      configmap.reloader.stakater.com/reload: grafana-dashboard
      secret.reloader.stakater.com/reload: grafana-admin-secret

    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /tmp/dashboards/home.json
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_LOG_MODE: console
      GF_NEWS_NEWS_FEED_ENABLED: false
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: *app
      GF_SERVER_ROOT_URL: "https://{{ .Release.Name }}.${PUBLIC_DOMAIN}"

    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth.basic:
        enabled: false
        disable_login_form: true
      auth.anonymous:
        enabled: true
        org: Stuff
        org_role: Editor

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: database
            orgId: 1
            folder: Database
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/database

          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default

          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux

          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes

          - name: networking
            orgId: 1
            folder: Networking
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/networking

          - name: observability
            orgId: 1
            folder: Observability
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/observability

          - name: storage
            orgId: 1
            folder: Storage
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/storage

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            isDefault: true
            jsonData:
              prometheusType: Prometheus

          - name: VictoriaLogs
            type: victoriametrics-logs-datasource
            access: proxy
            url: http://victoria-logs-server.observability.svc.cluster.local:9428

          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://alertmanager-operated.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus

        deleteDatasources:
          - name: Alertmanager
            orgId: 1
          - name: Prometheus
            orgId: 1
          - name: VictoriaLogs
            orgId: 1

    dashboards:

      database:

        cloudnative-pg:
          # renovate: dashboardName="CloudNativePG"
          gnetId: 20417
          revision: 4
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly-operator/refs/heads/main/monitoring/grafana-dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      default:

        apc-ups:
          url: /tmp/dashboards/apc-ups.json
          datasource:
            - name: DS_THINKY
              value: Prometheus

        cert-manager:
          # renovate: dashboardName="cert-manager"
          gnetId: 11001
          revision: 1
          datasource: Prometheus

        external-dns:
          url: /tmp/dashboards/external-dns.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        node-exporter-full:
          # renovate: dashboardName="Node Exporter Full"
          gnetId: 1860
          revision: 42
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        smartctl-exporter:
          # renovate: dashboardName="SMARTctl Exporter Dashboard"
          gnetId: 22604
          revision: 2
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        spegel:
          # renovate: dashboardName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus

      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 16
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 21
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 37
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus

      networking:

        unifi-insights:
          # renovate: dashboardName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus

        unifi-network-sites:
          # renovate: dashboardName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus

        unifi-usw:
          # renovate: dashboardName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus

        unifi-uap:
          # renovate: dashboardName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus

        cloudflared:
          # renovate: dashboardName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource: Prometheus

        envoy-gateway:
          url: https://raw.githubusercontent.com/envoyproxy/gateway/refs/heads/main/charts/gateway-addons-helm/dashboards/envoy-gateway-global.json
          datasource: Prometheus

        envoy-proxy:
          url: https://raw.githubusercontent.com/envoyproxy/gateway/refs/heads/main/charts/gateway-addons-helm/dashboards/envoy-proxy-global.json
          datasource: Prometheus

      observability:

        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 7
          datasource: Prometheus

        alertmanager:
          # renovate: depName="Alertmanager"
          gnetId: 9578
          revision: 4
          datasource: Prometheus

        blackbox-exporter:
          # renovate: depName="Prometheus Blackbox Exporter"
          gnetId: 7587
          revision: 3
          datasource: Prometheus

      storage:

        truenas-scale:
          url: /tmp/dashboards/truenas-scale.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        volsync:
          # renovate: dashboardName="VolSync Dashboard"
          gnetId: 21356
          revision: 3
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
            - name: VAR_REPLICATIONDESTNAME
              value: ".*-bootstrap"

    imageRenderer:
      enabled: true

    persistence:
      enabled: false

    plugins:
      - farski-blendstat-panel
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-polystat-panel
      - grafana-singlestat-panel
      - grafana-worldmap-panel
      - mxswat-separator-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - speakyourcode-button-panel
      - snuids-trafficlights-panel
      - victoriametrics-logs-datasource
      - vonage-status-panel

    resources:
      limits:
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 128Mi

    route:
      main:
        enabled: true
        hostnames: ["{{ .Release.Name }}.${PUBLIC_DOMAIN}"]
        parentRefs:
          - name: envoy-internal
            namespace: network

    serviceAccount:
      create: true
      autoMount: true

    serviceMonitor:
      enabled: true

    sidecar:
      image:
        registry: ghcr.io
        repository: home-operations/k8s-sidecar
        tag: 1.30.9
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
      extraEnv:
        - name: DOWNLOAD_DASHBOARDS
          value: "true"
        - name: FILE_WRITE_ATOMIC
          value: "true"

    testFramework:
      enabled: false

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app