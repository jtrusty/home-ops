---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/core.v1.json
apiVersion: v1
kind: Service
metadata:
  name: &app minio-ui-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: *app
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: https
      port: 9002
      targetPort: 9002
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/core.v1.json
apiVersion: v1
kind: Service
metadata:
  name: &app minio-s3-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: *app
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: https
      port: 9000
      targetPort: 9000
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/discovery.k8s.io/endpointslice_v1.json
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: &app minio-ui-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: *app
    kubernetes.io/service-name: *app
addressType: IPv4
ports:
  - name: https
    protocol: TCP
    port: 9002
endpoints:
  - addresses: ["10.10.100.30"]
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/discovery.k8s.io/endpointslice_v1.json
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: &app minio-s3-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: *app
    kubernetes.io/service-name: *app
addressType: IPv4
ports:
  - name: https
    protocol: TCP
    port: 9000
endpoints:
  - addresses: ["10.10.100.30"]
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/httproute_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: &app minio-ui-proxy
  namespace: default
spec:
  hostnames: ["minio.${PUBLIC_DOMAIN}"]
  parentRefs:
    - name: envoy-internal
      namespace: network
  rules:
    - backendRefs:
        - name: *app
          port: 9002
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/httproute_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: &app minio-s3-proxy
  namespace: default
spec:
  hostnames: ["s3.${PUBLIC_DOMAIN}"]
  parentRefs:
    - name: envoy-internal
      namespace: network
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: *app
          port: 9000
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/envoyproxy/gateway/refs/heads/main/charts/gateway-helm/crds/generated/gateway.envoyproxy.io_backendtlspolicies.yaml
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: minio-proxy-tls
  namespace: default
spec:
  targetRefs:
    - group: ""
      kind: Service
      name: minio-ui-proxy
  validation:
    hostname: "localhost" # must match a SAN on the MinIO cert
    caCertificateRefs:
      - group: ""
        kind: ConfigMap
        name: minio-ca
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/envoyproxy/gateway/refs/heads/main/charts/gateway-helm/crds/generated/gateway.envoyproxy.io_backendtlspolicies.yaml
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: minio-s3-proxy-tls
  namespace: default
spec:
  targetRefs:
    - group: ""
      kind: Service
      name: minio-s3-proxy
  validation:
    hostname: "localhost"
    caCertificateRefs:
      - group: ""
        kind: ConfigMap
        name: minio-ca
